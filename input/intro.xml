<?xml version="1.0"?>
<preface xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="intro">
  <info>
    <title>Вступление</title>
  </info>
  <section xml:id="welcome">
    <info>
      <title>Добро пожаловать!</title>
    </info>
    <para>Добро пожаловать в Computer Science from the Bottom Up</para>
    <section>
      <info>
        <title>Философия</title>
      </info>
      <para>Вкратце, то, что вы читаете предназначено для **shop**-класс
      Computer Science. Молодые студенты в Computer Science умеют управлять
      компьютером, но с чего им начать, чтобы узнать что скрыто "под
      капотом"? Попытка понять операционную систему, к сожалению, 
      не так проста как открытие капота. На данный момент ядро Linux
      состоит из миллионов строк кода, добавьте к этому другие критические 
      части современное операционной системы, такие как компилятор, ассемблер,
      системные библиотеки и ваш код уже трудно представить. Добавьте к этому
      университетский курс предмета операционных систем, несколько хороших
      справочных руководств, два или три года опыта с языком С и, 
      может только тогда, вы лишь <emphasis>немного приблизитесь</emphasis>
      к тому, чтобы понять что к чему.
      </para>
      <para>Продолжая аналогию с машиной (и капотом), перспективный студент
          начинает предпринимать попытки к работе над двигателем болида Формулы 1
          без каких-либо знаний как двухтактный мотор работает вообще.
        During their shop class the student should pull apart, twist, turn and put back
      together that two stroke motor, and consequentially have a pretty
      good framework for understanding just how the Formula One engine
      works. Никто не будет ожидать от него, что он станет инженером Формулы 1,
      but they are well on their way!</para>
    </section>
    <section>
      <info>
        <title>Почему <emphasis>снизу-вверх</emphasis>?</title>
      </info>
      <para>Не каждый хочет поступить в shop class. Большинство людей
      хотят только водить машину, а не знать как собрать оную с нуля.
      Очевидно, что любая вычислительная программа должна учитывать этот
      факт, иначе она не будет иметь значеия для студентов. Поэтому науке
      Computer Science учат "сверху-вниз"; приложения, высоко-уровневое
      программирование, дизайн ПО, возможно, структуры данных. Студентов,
      возможно, будут учить математической логике (двоичной логике), может быть
      даже таким низко-уровневым вещам, как регистры и коды операций и тому подобным
      на поверхностном уровне. </para>
      <para>Эта книга предлагает диаметрально-противоположный подход,
          начиная с основ операционных систем до того, как программы компилируются
          и запускаются. </para>
    </section>
    <section>
      <info>
        <title>Enabling technologies</title>
      </info>
      <para>This book is only possible thanks to the development of
      <glossterm linkend="opensource">Open Source</glossterm>
      technologies.  Before Linux it was like taking a shop course
      with a car that had it's bonnet welded shut; today we are in a
      position to open that bonnet, poke around with the insides and,
      better still, take that engine and use it to do whatever we
      want.</para>
    </section>
  </section>
</preface>
